Week 1 — JavaScript Fundamentals

Goal: Get comfortable with JS basics.

☑️ Day 1: Variables & Data Types

Learn var, let, const.

Practice primitive types (string, number, boolean, null, undefined).

Git milestone: git init, commit "Day 1 - Variables & Data Types".

☑️ Day 2: Operators & Type Coercion

== vs ===, truthy/falsy, logical operators.

Mini-task: function isEven(n) with strict checks.

Git: Commit "Day 2 - Operators & Coercion".

☑️ Day 3: Functions & Arrow Functions

Regular vs arrow functions, default params.

Mini-task: sum(...numbers) using rest.

Git: Commit "Day 3 - Functions".

☑️ Day 4: Objects & Arrays

Object literals, arrays, methods like map, filter, reduce.

Mini-task: filter even numbers, sum squares.

Git: Commit "Day 4 - Objects & Arrays".

☑️ Day 5: Destructuring & Spread

Practice pulling values out of objects/arrays.

Mini-task: clone and update objects with spread.

Git: Commit "Day 5 - Destructuring".

☑️ Day 6: Template Literals & Modules

Use backticks with ${}.

Try CommonJS (require) and ES6 modules (import).

Git: Commit "Day 6 - Modules".

☑️ Day 7 (Review/Project):

Build a small "Student Report" program using objects, arrays, functions.

Git milestone: Tag week1-complete.

🔹 Week 2 — Advanced JavaScript

Goal: Learn async JS and error handling.

☑️ Day 8: Closures & Scope

Mini-task: counter function with private variable.

Git: Commit "Day 8 - Closures".

☑️ Day 9: Hoisting & this

Compare arrow vs normal function this.

Git: Commit "Day 9 - Hoisting & this".

☑️ Day 10: Callbacks

Write async fetchData(callback) with setTimeout.

Git: Commit "Day 10 - Callbacks".

☑️ Day 11: Promises

Wrap setTimeout in a Promise.

Git: Commit "Day 11 - Promises".

☑️ Day 12: Async/Await

Convert Promise code to async/await.

Git: Commit "Day 12 - Async Await".

☑️ Day 13: Error Handling

Use try/catch in async function.

Git: Commit "Day 13 - Error Handling".

☑️ Day 14 (Review/Project):

Build "Weather App Simulator" with fake async fetch.

Git milestone: Tag week2-complete.

🔹 Week 3 — Node.js Core

Goal: Understand Node internals & modules.

☑️ Day 15: Node Intro & Globals

Learn about process, __dirname, global.

Git: Commit "Day 15 - Node Intro".

☑️ Day 16: File System (fs)

Read/write files.

Mini-task: log student records to file.

Git: Commit "Day 16 - FS".

☑️ Day 17: Path & OS Modules

Use path.join, os.cpus().

Git: Commit "Day 17 - Path & OS".

☑️ Day 18: EventEmitter

Create custom event, handle multiple listeners.

Git: Commit "Day 18 - EventEmitter".

☑️ Day 19: Buffers & Streams

Copy file with streams.

Git: Commit "Day 19 - Streams".

☑️ Day 20: HTTP Module

Create basic server with http.createServer.

Git: Commit "Day 20 - HTTP Server".

☑️ Day 21 (Review/Project):

CLI tool: Read a JSON file, format output.

Git milestone: Tag week3-complete.

🔹 Week 4 — Express.js Basics

Goal: Build REST APIs.

☑️ Day 22: Express Setup

Install express, create /hello.

Git: Commit "Day 22 - Express setup".

☑️ Day 23: Routes & Middleware

Create /todos routes.

Git: Commit "Day 23 - Routes".

☑️ Day 24: Error Handling Middleware

Central error handler.

Git: Commit "Day 24 - Error Handler".

☑️ Day 25: Validation & CORS

Add request validation.

Git: Commit "Day 25 - Validation".

☑️ Day 26: RESTful API Structure

Split routes/controllers/services.

Git: Commit "Day 26 - API Structure".

☑️ Day 27: Logging & Config

Add morgan/pino, .env.

Git: Commit "Day 27 - Logging".

☑️ Day 28 (Review/Project):

Complete Todo API (in-memory).

Git milestone: Tag week4-complete.

🔹 Week 5 — Database + Auth

Goal: Persist data & secure APIs.

☑️ Day 29: DB Intro (MySQL/Postgres or MongoDB).

Connect, create table/collection.

Git: Commit "Day 29 - DB Setup".

☑️ Day 30: CRUD with DB

Save todos in DB.

Git: Commit "Day 30 - DB CRUD".

☑️ Day 31: Pagination & Filters

Query params for status.

Git: Commit "Day 31 - Pagination".

☑️ Day 32: Password Hashing (bcrypt).

Create /register.

Git: Commit "Day 32 - Register".

☑️ Day 33: JWT Auth

/login returns JWT.

Git: Commit "Day 33 - JWT Login".

☑️ Day 34: Auth Middleware

Protect /todos.

Git: Commit "Day 34 - Auth Middleware".

☑️ Day 35 (Review/Project):

Full Auth + Todo API with DB.

Git milestone: Tag week5-complete.

🔹 Week 6 — Testing & Deployment

Goal: Make app production-ready.

☑️ Day 36: Testing with Jest

Write test for utils.

Git: Commit "Day 36 - Unit Tests".

☑️ Day 37: Supertest for API

Test /todos.

Git: Commit "Day 37 - API Tests".

☑️ Day 38: Linting & Formatting

Setup ESLint + Prettier.

Git: Commit "Day 38 - Linting".

☑️ Day 39: Docker Basics

Dockerize API.

Git: Commit "Day 39 - Dockerized API".

☑️ Day 40: Redis Caching

Add caching for todos.

Git: Commit "Day 40 - Caching".

☑️ Day 41: Graceful Shutdown

Handle SIGINT, close DB connections.

Git: Commit "Day 41 - Graceful Shutdown".

☑️ Day 42 (Capstone):

Deploy API with Docker + DB.

Document endpoints in README.md.

Git milestone: Tag final-capstone.

✅ End Result:
By the end of 6 weeks, you’ll have:

Solid JS fundamentals.

Comfort with async patterns.

A working Node.js + Express + DB + Auth REST API.

Git history showing your learning progress.